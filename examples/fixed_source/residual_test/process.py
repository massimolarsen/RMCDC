import numpy as np
import matplotlib.pyplot as plt
import matplotlib.animation as animation
import h5py

# =============================================================================
# Reference solution (SS)
# =============================================================================

# Load grids
with h5py.File("output.h5", "r") as f:
    x = f["tally/grid/x"][:]
    t = f["tally/grid/t"][:]

dx = x[1] - x[0]
x_mid = 0.5 * (x[:-1] + x[1:])
dt = t[1:] - t[:-1]
K = len(dt)
J = len(x_mid)


# =============================================================================
# Animate results
# =============================================================================

with h5py.File("output.h5", "r") as f:
    phi = f["tally/flux/mean"][:]
    phi_sd = f["tally/flux/sdev"][:]

with h5py.File("rmc1e6estimate.h5", "r") as f:
    phi1 = f["tally/flux/mean"][:]
with h5py.File("rmc1e6noestimate.h5", "r") as f:
    phi2 = f["tally/flux/mean"][:]
with h5py.File("outputtest.h5", "r") as h:
    phi3 = h["tally/flux/mean"][:]

phi = [[4.31747918e-01, 3.15781854e-02],
 [4.68085131e-01, 6.52275264e-02],
 [5.18024650e-01 ,1.33038002e-01],
 [5.42531895e-01, 1.39790667e-01],
 [5.98467877e-01 ,1.99449338e-01],
 [6.35819841e-01, 2.28429109e-01],
 [6.62806937e-01, 2.53100826e-01],
 [7.09684403e-01, 2.72329341e-01],
 [8.04089886e-01, 3.41405481e-01],
 [8.55108022e-01, 3.65932752e-01],
 [8.67681610e-01, 3.37022080e-01],
 [9.53608091e-01, 4.54210209e-01],
 [1.02415611e+00, 4.86865590e-01],
 [1.09629779e+00, 5.08373392e-01],
 [1.20729127e+00, 6.24654736e-01],
 [1.27137776e+00, 6.40885077e-01],
 [1.33243928e+00, 6.45460275e-01],
 [1.46141800e+00, 7.20420192e-01],
 [1.61914718e+00, 8.24179085e-01],
 [1.72380502e+00, 8.39450027e-01],
 [1.83366102e+00, 9.92026051e-01],
 [1.86900228e+00, 1.19028673e+00],
 [1.90734474e+00, 1.32076640e+00],
 [1.88728243e+00, 1.44946575e+00],
 [1.89441422e+00, 1.52302025e+00],
 [1.85129692e+00, 1.58785566e+00],
 [1.83757287e+00, 1.67157009e+00],
 [1.80704171e+00, 1.75692810e+00],
 [1.73236876e+00, 1.80270175e+00],
 [1.68994660e+00, 1.80597015e+00],
 [1.63988900e+00, 1.88213528e+00],
 [1.56330250e+00, 1.94614250e+00],
 [1.50020032e+00, 1.97202003e+00],
 [1.35983303e+00, 1.93329898e+00],
 [1.19259390e+00, 1.90106441e+00],
 [1.10593901e+00, 1.87043979e+00],
 [9.36803336e-01, 1.84365323e+00],
 [7.52702243e-01, 1.79780586e+00],
 [5.10093400e-01, 1.73608134e+00],
 [2.07707345e-01 ,1.68409041e+00],
 [2.85532796e-04, 1.65276484e+00],
 [2.85532796e-04, 1.65276484e+00],
 [2.85532796e-04 ,1.65276484e+00],
 [2.85532796e-04, 1.65276484e+00],
 [2.85532796e-04, 1.65276484e+00],
 [2.85532796e-04, 1.65276484e+00],
 [2.85532796e-04, 1.65276484e+00],
 [2.85532796e-04 ,1.65276484e+00],
 [2.85532796e-04, 1.65276484e+00],
 [2.85532796e-04, 1.65276484e+00],
 [5.65165373e-04, 9.30307863e-01],
 [5.96172687e-04, 3.61648488e-01],
 [1.59312514e-03, 1.76300142e-01],
 [2.72113609e-03, 8.53443887e-02],
 [7.86340088e-03, 3.51848934e-02],
 [1.41563166e-02, 2.07003377e-02],
 [3.04020148e-02, 9.25333307e-03],
 [5.17697021e-02, 1.71904972e-03],
 [1.05801599e-01, 3.64796111e-03],
 [2.67436696e-01 ,2.97386312e-03],
 [4.99983413e-01, 4.50192574e-01],
 [4.99997566e-01, 4.99722008e-01],
 [4.99992532e-01, 4.99983705e-01],
 [4.99950471e-01, 5.00001528e-01],
 [5.00021267e-01, 4.99921576e-01],
 [5.00004605e-01, 5.00052406e-01],
 [4.99906891e-01, 5.00143019e-01],
 [5.00001442e-01, 5.00019106e-01],
 [5.00013570e-01, 4.99985529e-01],
 [5.00043392e-01, 5.00009303e-01],
 [4.99972553e-01, 4.99963873e-01],
 [4.99974393e-01, 4.99982334e-01],
 [5.00096388e-01, 5.00052739e-01],
 [4.99991665e-01 ,4.99772070e-01],
 [4.99954631e-01, 4.99986775e-01],
 [4.99992064e-01, 5.00063004e-01],
 [5.00031490e-01, 5.00139266e-01],
 [4.99981776e-01, 4.99990235e-01],
 [4.99976458e-01, 5.00095529e-01],
 [4.99847278e-01 ,4.99995379e-01]]


phi2 = [[ 3.93150174e-01, -1.03646812e-02],
 [ 5.28058362e-01, -1.91076626e-02],
 [ 6.07285508e-01,  6.47695082e-02],
 [ 6.22204340e-01,  1.20587685e-01],
 [ 6.44367158e-01,  2.08147972e-01],
 [ 7.72510907e-01,  2.29376161e-01],
 [ 8.83367446e-01,  3.10094910e-01],
 [ 9.55287431e-01,  3.96067047e-01],
 [ 8.33576209e-01,  3.74155333e-01],
 [ 7.74596555e-01,  4.28033780e-01],
 [ 7.85500394e-01,  6.24138681e-01],
 [ 8.80323724e-01,  5.76826487e-01],
 [ 9.51985312e-01,  5.53933251e-01],
 [ 1.05528903e+00,  5.70410898e-01],
 [ 1.08101113e+00,  6.78477569e-01],
 [ 1.24345016e+00,  8.37264239e-01],
 [ 1.20144718e+00,  7.45193553e-01],
 [ 1.40508727e+00,  9.98462158e-01],
 [ 1.46617518e+00,  9.40952146e-01],
 [ 1.64582985e+00,  9.51378751e-01],
 [ 1.78768469e+00,  9.13250631e-01],
 [ 1.74755210e+00,  1.19954000e+00],
 [ 1.83362667e+00,  1.46502455e+00],
 [ 1.80006989e+00,  1.44228643e+00],
 [ 1.75880008e+00,  1.34350302e+00],
 [ 1.84496435e+00,  1.59497851e+00],
 [ 1.82769377e+00,  1.82579973e+00],
 [ 1.79374938e+00,  1.84513034e+00],
 [ 1.85987445e+00,  1.99470975e+00],
 [ 1.81971335e+00,  1.95023372e+00],
 [ 1.70472900e+00,  1.95339961e+00],
 [ 1.55768553e+00,  2.08119740e+00],
 [ 1.38022421e+00,  2.13436841e+00],
 [ 1.15323071e+00,  1.94765913e+00],
 [ 1.03693424e+00,  1.96436221e+00],
 [ 8.72325442e-01,  1.89066087e+00],
 [ 7.85801467e-01,  1.83862364e+00],
 [ 7.63309498e-01,  1.81421279e+00],
 [ 4.52234648e-01,  1.61813847e+00],
 [ 1.64453503e-01,  1.53346927e+00],
 [ 8.58464766e-04,  1.22886009e+00],
 [ 8.58464766e-04,  1.22886009e+00],
 [ 8.58464766e-04,  1.22886009e+00],
 [ 8.58464766e-04,  1.22886009e+00],
 [ 8.58464766e-04,  1.22886009e+00],
 [ 8.58464766e-04,  1.22886009e+00],
 [ 8.58464766e-04,  1.22886009e+00],
 [ 8.58464766e-04,  1.22886009e+00],
 [ 8.58464766e-04,  1.22886009e+00],
 [ 8.58464766e-04,  1.22886009e+00],
 [-1.29213196e-03,  9.07856766e-01],
 [ 1.33675608e-03,  3.21052391e-01],
 [-2.67698640e-03,  1.62618455e-01],
 [ 2.53185745e-03,  6.96520220e-02],
 [ 2.16113451e-03,  2.10593866e-02],
 [ 2.20805751e-02,  7.83174192e-03],
 [ 2.45302673e-02,  5.38705300e-03],
 [ 4.63958681e-02,  3.56520727e-03],
 [ 1.09545496e-01, -1.79171029e-03],
 [ 3.02193170e-01,  1.10926425e-02],
 [ 5.00223658e-01,  4.51081266e-01],
 [ 4.99758951e-01,  5.00202793e-01],
 [ 5.00209545e-01,  4.99988938e-01],
 [ 4.99028045e-01,  4.99876713e-01],
 [ 5.00000735e-01,  4.99835166e-01],
 [ 5.00045616e-01,  4.99918310e-01],
 [ 4.99963586e-01,  5.00266085e-01],
 [ 4.99974680e-01,  4.99937092e-01],
 [ 4.99714568e-01,  5.00023677e-01],
 [ 4.99872768e-01,  5.00029463e-01],
 [ 4.99987779e-01,  4.99750512e-01],
 [ 5.00041797e-01,  5.00260449e-01],
 [ 5.00644490e-01,  4.99845208e-01],
 [ 4.99881981e-01,  4.99950090e-01],
 [ 5.00016517e-01,  5.00008866e-01],
 [ 5.00014775e-01,  5.00116810e-01],
 [ 4.99627534e-01,  4.99876366e-01],
 [ 4.99968138e-01,  5.00294308e-01],
 [ 4.99849948e-01,  5.00106503e-01],
 [ 5.00293612e-01,  5.00161628e-01]]
#print(phi)
phi = np.sum(phi, axis=1)
phi2 = np.sum(phi2, axis=1)
#print(np.sum(phi))
#print(phi1)
#phi1 = np.sum(phi1, axis=1)
#print(phi2)
#phi2 = np.sum(phi2, axis=1)

#phi3 = np.sum(phi3, axis=1)
#print(phi3)

x= np.linspace(0,10,80)

#plt.plot(x, phi, label="RMC with no estimate")
plt.step(x, phi, where="mid", label="RMC with estimate") 
plt.step(x, phi2, where="mid", label="RMC with estimate") 


#plt.step(x, phi1, where="mid", label="RMC with estimate") 
#plt.step(x, phi2, where="mid", label="RMC with no estimate")
#plt.step(x, phi3, where="mid", label="Standard MC")


#plt.plot(x, phi2, label="RMC with no estimate")
#plt.plot(x, phi3, label="Standard MC")
plt.title("1e6 particles, constant source, vacuum boundary, 1/100 scattering")
plt.xlabel("x")
plt.ylabel("flux")
plt.legend()


plt.show()
